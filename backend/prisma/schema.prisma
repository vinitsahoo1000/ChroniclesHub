// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id       String  @id @default(uuid())
  name     String
  bio      String?
  imageUrl String?
  email    String
  username String @unique
  password String
  following Follows[] @relation("Following")
  follower Follows[] @relation("Follower")
  blog     Blog[]
  liked    Blog[] @relation("Liked")
  comments  Comment[]
}

model Comment {
  id    String  @id @default(uuid())
  content String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  //Relation
  authorId String
  author   User   @relation(fields: [authorId], references: [id])

  blogId String
  blog  Blog   @relation(fields: [blogId], references: [id])
}

model Follows {
  id  String @id @default(uuid())
  following_id String
  follower_id String
  user_Following User @relation(name: "Following", fields: [following_id], references: [id])
  user_Follower User @relation(name: "Follower", fields: [follower_id], references: [id])
}


model Blog {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  authorId  String
  title     String
  content   String
  imageUrl  String?
  likes     User[]   @relation("Liked")
  comments  Comment[]
  author    User     @relation(fields: [authorId], references: [id])
}